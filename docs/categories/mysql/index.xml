<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL on iwakero.com</title><link>/categories/mysql/</link><description>Recent content in MySQL on iwakero.com</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy; Copyright 2020, ryosei iwai</copyright><lastBuildDate>Sun, 21 Mar 2021 14:52:42 +0900</lastBuildDate><atom:link href="/categories/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL 8.0 のロックスケジューラ CATS</title><link>/post/20210321/</link><pubDate>Sun, 21 Mar 2021 14:52:42 +0900</pubDate><guid>/post/20210321/</guid><description>MySQL 8.0.3 にて Innodb の default にされたロックスケジューラ CATS について調べたので、自分なりにまとめてみる
CATS の略 Contention-Aware Transaction Scheduling の略
日本語訳すると、コンテンションを意識したトランザクションスケジューリング。
ロックスケジューラについて ロックスケジューラーは、複数のトランザクションが同一のオブジェクトのロックを取ろうとした時、どれが最初にロックを取るべきかを決定する。
どのトランザクションを優先すべきかはグラフの依存関係の解決が必要であり、NP困難となる例が多い。そのため 8.0 より前の MySQL や多くの database system では、 FIFO(First-In-First-Out)系のアルゴリズムを採用している。要は最初に要求がきたトランザクションにそのロックを与える方式で、これはシンプルである。
CATAS は上記従来のアルゴリズムよりレイテンシーを減少させ、スループットを向上させるアルゴリズムとして提案された。
CATS の仕組み CATS はひとつの単純な直感に基づいている。
「全てのトランザクションは等価ではなく、全てのオブジェクトも等価ではない」
あるトランザクションが既に多くのトランザクションが待っているオブジェクトのロックを取っているなら、そのトランザクションが新たに要求するロックは、優先的に与えられるべきである。何故なら、このようなトランザクションのロックを優先して開放していく事は、全体としてより多くのロックを開放する事に繋がるからである。
例えるなら同じコーヒーの行列に並ぶタクシー運転手とバスの運転手。バスの運転手に優先してコーヒーを提供する事は、結果的により多くの人をより早く目的地に到着させる。
ただし、CATS は常に適用されている訳ではなく、待機しているトランザクションが 32 を超える場合に適用される。この数字はテストによって決定された。
( 確かにパフォーマンス比較をみると、 client 数が 64 を超えない限りは FIFO と CATS に差がない、比較はブログ参照 )
以下、読んでいて感じた疑問と、その解決
疑問1. タクシーの運転手、永遠にコーヒー飲めない問題 個人的疑問としては、この手のスケジューリングの問題として、結果優先度が低いやつが永遠に待たされる問題がよく挙げられる。
と思って調べたら、既にブログで質問がされていた。
===
スタベーションの問題はどう扱っていますか？
例に挙げられているバスとタクシーではバスを優先する事は理にかなっていますが、常にバスのキューが2つ並んでいると、タクシーには順番は回ってきません。このようなケースは自然に解決されますか？
Peter Zaitsev
===
この質問への回答は、
1. バスとタクシーの例はあるが、実際には全てのトランザクションはタクシーである
確かにこれは例えの罠で、トランザクションがロックを取った時点では、そのトランザクションを待っている大量のトランザクションというのは存在しない。時間経過と共に増えていくので、常に大量のトランザクションを待たせた奴が来続けるという状況は多くはないのか。
2. 色々対策のアルゴリズムも入っている
挙げられているものは、
ロックの待機時間が長いトランザクションの優先度を上げる ロックキューに時々バリアを入れて、バリアの前のキューを捌くようにする などなど、今後新たに導入される奴もあるらしい。</description></item></channel></rss>