<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GCP on iwakero.com</title><link>/tags/gcp/</link><description>Recent content in GCP on iwakero.com</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy; Copyright 2020, ryosei iwai</copyright><lastBuildDate>Thu, 30 Apr 2020 01:51:03 +0900</lastBuildDate><atom:link href="/tags/gcp/index.xml" rel="self" type="application/rss+xml"/><item><title>外出できないのでサイトを作ってみた</title><link>/post/20200430/</link><pubDate>Thu, 30 Apr 2020 01:51:03 +0900</pubDate><guid>/post/20200430/</guid><description>最近のこと 大学院卒業前にせっかく作った hatena blog も就職後はロクに更新もせず、無人広告塔に成り果ててしまった。仕事は楽しく非常に勉強にもなっているが、自分だけの勉強はこの1年どうだったかと言うと難しい。
そこで、GW 初日にまた自分のサイトを作ってみた。理由としては、やはりインフラエンジニアとして勉強を重ねるなら、やはり自分の環境は必要であると言うことが身にしみて分かったからだ。重ねて、新卒採用の面談などを繰り返す内に徐々に自分の知らない web フレームワークが増えていたので、流石に触れていこうと触発されたのもある。
と言う事で、この記事では本web siteの構成について軽く触れる。
web site を作ってみたこと 構成 構成は最初はシンプルにしようと、数時間で作れる構成とした。
https://github.com/zensai3805/iwakero-web
HUGO で生成した静的ファイルを github 上の Action で build し、そのまま Google Cloud Storage へ Upload している。action の yml は以下だ。
https://github.com/zensai3805/iwakero-web/blob/master/.github/workflows/delivery.yml
web front をさっくり用意したかった事、 github action で CD を触ってみたかった事、今後 GCP(GKE) にも手を伸ばそうという事で、最低限の要素を押さえてみた。
感想 感想としては、素直に楽しい。リポジトリへ push から始まり流れていく様は気持ちがよく、何より簡単だ。
今後の予定としては、
hugo はそもそも自分で deploy をする仕組みがあるので、 gsutil から移行する https へ対応する CSS まわり調整する hugo はtheme内の file を override する機能があるが、上手くいっていない Google Cloud Storage からもう少し複雑な構成を試してみる。(目的も勉強だし) 更新する環境や体制をもう少しよくしようー と言った所だ。</description></item></channel></rss>